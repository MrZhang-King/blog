<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- user -->
<mapper namespace="com.zb.blog.mapper.UserMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="userMap" type="user">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="manager_state" property="managerState" jdbcType="VARCHAR" />
        <result column="icon" property="icon" jdbcType="BLOB" typeHandler="com.zb.blog.handler.BlobToStringTypeHandler" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        u.id, u.username, u.password, u.manager_state, u.icon
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
        <include refid="allColumns" />
        FROM user u
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM user u WHERE 1 = 1
        <if test="username != null and username != ''">
            AND u.username = #{username}
        </if>
        <if test="password != null and password != ''">
            AND u.password = #{password}
        </if>
        <if test="managerState != null">
            AND u.manager_state = #{managerState}
        </if>
        <if test="icon != null">
            AND u.icon = #{icon}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findUserByIds" resultMap="userMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM user u WHERE u.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertUser" parameterType="map">
        INSERT INTO user (
            id, username, password, manager_state, icon
        ) VALUES (
            #{id},
            #{username},
            #{password},
            #{managerState},
            #{icon}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertUsers" parameterType="list">
        INSERT INTO user (
            id, username, password, manager_state, icon
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.username},
                #{item.password},
                #{item.managerState},
                #{item.icon}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateUser" parameterType="user">
        UPDATE user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="managerState != null">
                manager_state = #{managerState},
            </if>
            <if test="icon != null">
                icon = #{icon}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    
    <!-- 根据主键删除数据 -->
    <delete id="deleteUserById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteUserByIds" parameterType="list">
        DELETE FROM user WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

<!--    ====================================-->
    <!--    对应key和value；方便handler处理-->
    <resultMap id="mapResult" type="HashMap">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="manager_state" property="managerState" />
        <result column="icon" property="icon" typeHandler="com.zb.blog.handler.BlobToStringTypeHandler" />
    </resultMap>

    <!--    查询,通过handler处理为map-->
    <select id="selectUserToMap" resultMap="mapResult">
        SELECT
        <include refid="allColumns" />
        FROM user u
    </select>
</mapper>