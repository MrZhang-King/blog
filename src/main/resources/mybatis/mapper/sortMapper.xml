<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- sort -->
<mapper namespace="com.zb.blog.mapper.SortMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="sortMap" type="sort">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="sort_name" property="sortName" jdbcType="VARCHAR" />
        <result column="sort_abstract" property="sortAbstract" jdbcType="BLOB" />
        <result column="blog_count" property="blogCount" jdbcType="INTEGER" />
        <result column="sort_state" property="sortState" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        s.id, s.sort_name, s.sort_abstract, s.blog_count, s.sort_state, s.create_time, s.update_time
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findSortAll" resultMap="sortMap">
        SELECT
        <include refid="allColumns" />
        FROM sort s
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findSortByCondition" resultMap="sortMap" parameterType="sort">
        SELECT
        <include refid="allColumns" />
        FROM sort s WHERE 1 = 1
        <if test="sortName != null and sortName != ''">
            AND s.sort_name=#{sortName}
        </if>
        <if test="sortAbstract != null">
            AND s.sort_abstract = #{sortAbstract}
        </if>
        <if test="blogCount != null">
            AND s.blog_count = #{blogCount}
        </if>
        <if test="sortState != null">
            AND s.sort_state = #{sortState}
        </if>
        <if test="createTime != null">
            AND s.create_time = #{createTime}
        </if>
        <if test="updateTime != null">
            AND s.update_time = #{updateTime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findSortByIds" resultMap="sortMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM sort s WHERE s.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

<!--    对应key和value；方便handler处理-->
    <resultMap id="mapResult" type="HashMap">
        <result property="id" column="id" />
        <result property="sortName" column="sort_name" />
        <result property="sortAbstract" column="sort_abstract" />
        <result property="blogCount" column="blog_count" />
        <result property="sortState" column="sort_state" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
    </resultMap>

<!--    查询,通过handler处理为map-->
    <select id="selectSortToMap" resultMap="mapResult">
        SELECT
        <include refid="allColumns" />
        FROM sort s
    </select>
<!--    将查询到的分类按照博客数量进行排序-->
    <select id="orderSort" parameterType="string" resultMap="sortMap">
        SELECT
        <include refid="allColumns" />
        FROM sort s WHERE s.sort_state = 0 order by s.blog_count ${descOrAsc}
    </select>
    <!-- 插入数据 -->
    <insert id="insertSort" parameterType="map">
        INSERT INTO sort (
            id, sort_name, sort_abstract, blog_count, sort_state, create_time, update_time
        ) VALUES (
            #{id},
            #{sortName},
            #{sortAbstract},
            #{blogCount},
            #{sortState},
            #{createTime},
            #{updateTime}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertSorts" parameterType="list">
        INSERT INTO sort (
            id, sort_name, sort_abstract, blog_count, sort_state, create_time, update_time
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.sortName},
                #{item.sortAbstract},
                #{item.blogCount},
                #{sortState},
                #{createTime},
                #{updateTime}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateSort" parameterType="map">
        UPDATE sort
        <set>
            <if test="sortName != null">
                sort_name = #{sortName},
            </if>
            <if test="sortAbstract != null">
                sort_abstract = #{sortAbstract},
            </if>
            <if test="blogCount != null">
                blog_count = #{blogCount},
            </if>
            <if test="sortState != null">
                sort_state = #{sortState},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateSorts" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE sort
            <set>
                <if test="item.sortName != null">
                    sort_name = #{item.sortName},
                </if>
                <if test="item.sortAbstract != null">
                    sort_abstract = #{item.sortAbstract},
                </if>
                <if test="item.blogCount != null">
                    blog_count = #{item.blogCount},
                </if>
                <if test="sortState != null">
                    sort_state = #{sortState},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteSortById" parameterType="int">
        DELETE FROM sort WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteSortByIds" parameterType="list">
        DELETE FROM sort WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>