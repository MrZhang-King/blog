<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- blog -->
<mapper namespace="com.zb.blog.mapper.BlogMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="blogMap" type="blog">
        <id column="id" property="id" jdbcType="INTEGER" />
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <id column="property" property="property" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="blog_abstract" property="blogAbstract" jdbcType="BLOB" typeHandler="com.zb.blog.handler.BlobToStringTypeHandler" />
        <result column="content" property="content" jdbcType="BLOB" typeHandler="com.zb.blog.handler.BlobToStringTypeHandler" />
        <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
        <result column="page_view_count" property="pageViewCount" jdbcType="INTEGER" />
        <result column="tag" property="tag" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="VARCHAR" />
        <result column="blog_comment" property="blogComment" jdbcType="BLOB" />
        <result column="blog_img" property="blogImg" jdbcType="BLOB" typeHandler="com.zb.blog.handler.BlobToStringTypeHandler" />
        <result column="blog_state" property="blogState" jdbcType="VARCHAR" />
        <result column="like_state" property="likeState" jdbcType="VARCHAR" />
        <result column="comment_state" property="commentState" jdbcType="VARCHAR" />
        <result column="recommend_state" property="recommendState" jdbcType="VARCHAR" />
        <result column="reprint_state" property="reprintState" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        b.id, b.user_id, b.property, b.title, b.blog_abstract, b.content, b.publish_time, b.page_view_count, b.tag, b.sort,
        b.blog_comment, b.blog_img, b.blog_state, b.like_state, b.comment_state, b.recommend_state,
         b.reprint_state, b.create_time, b.update_time
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findBlogAll" resultMap="blogMap">
        SELECT
        <include refid="allColumns" />
        FROM blog b
    </select>
    <!-- 根据条件参数查询数据列表 -->
    <select id="findBlogByCondition" resultMap="blogMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM blog b WHERE 1 = 1
        <if test="userId != null">
            AND b.user_id = #{userId}
        </if>
        <if test="property != null">
            AND b.property = #{property}
        </if>
        <if test="title != null and title != ''">
            AND b.title LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="blogAbstract != null">
            AND b.blog_abstract = #{blogAbstract}
        </if>
        <if test="content != null">
            AND b.content = #{content}
        </if>
        <if test="publishTime != null">
            AND b.publish_time = #{publishTime}
        </if>
        <if test="pageViewCount != null">
            AND b.page_view_count = #{pageViewCount}
        </if>
        <if test="tag != null and tag != ''">
            AND b.tag LIKE CONCAT('%', #{tag}, '%')
        </if>
        <if test="sort != null and sort != ''">
            AND b.sort LIKE CONCAT('%', #{sort}, '%')
        </if>
        <if test="blogComment != null">
            AND b.blog_comment = #{blogComment}
        </if>
        <if test="blogImg != null">
            AND b.blog_img = #{blogImg}
        </if>
        <if test="blogState != null">
            AND b.blog_state = #{blogState}
        </if>
        <if test="likeState != null">
            AND b.like_state = #{likeState}
        </if>
        <if test="commentState != null">
            AND b.comment_state = #{commentState}
        </if>
        <if test="recommendState != null">
            AND b.recommend_state = #{recommendState}
        </if>
        <if test="reprintState != null">
            AND b.reprint_state = #{reprintState}
        </if>
        <if test="createTime != null">
            AND b.create_time = #{createTime}
        </if>
        <if test="updateTime != null">
            AND b.update_time = #{updateTime}
        </if>
        <if test="descOrAsc != null and descOrAsc != ''">
            order by b.publish_time ${descOrAsc}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findBlogByIds" resultMap="blogMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM blog b WHERE b.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertBlog" parameterType="map">
        INSERT INTO blog (
            id, user_id, property, title, blog_abstract, content, publish_time, page_view_count, tag, sort,
            blog_comment, blog_img, blog_state, like_state, comment_state, recommend_state,
             reprint_state, create_time, update_time
        ) VALUES (
            #{id},
            #{userId},
            #{property},
            #{title},
            #{blogAbstract},
            #{content},
            #{publishTime},
            #{pageViewCount},
            #{tag},
            #{sort},
            #{blogComment},
            #{blogImg},
            #{blogState},
            #{likeState},
            #{commentState},
            #{recommendState},
            #{reprintState},
            #{createTime},
            #{updateTime}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertBlogs" parameterType="list">
        INSERT INTO blog (
            id, user_id, property, title, blog_abstract, content, publish_time, page_view_count, tag, sort,
            blog_comment, blog_img, blog_state, like_state, comment_state, recommend_state,
             reprint_state, create_time, update_time
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.userId},
                #{item.property},
                #{item.title},
                #{item.blogAbstract},
                #{item.content},
                #{item.publishTime},
                #{item.pageViewCount},
                #{item.tag},
                #{item.sort},
                #{item.blogComment},
                #{item.blogImg},
                #{item.blogState},
                #{item.likeState},
                #{item.commentState},
                #{item.recommendState},
                #{item.reprintState},
                #{item.createTime},
                #{item.updateTime}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateBlog" parameterType="blog">
        UPDATE blog
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="property != null">
                property = #{property},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="blogAbstract != null">
                blog_abstract = #{blogAbstract},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime},
            </if>
            <if test="pageViewCount != null">
                page_view_count = #{pageViewCount},
            </if>
            <if test="tag != null">
                tag = #{tag},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="blogComment != null">
                blog_comment = #{blogComment},
            </if>
            <if test="blogImg != null">
                blog_img = #{blogImg},
            </if>
            <if test="blogState != null">
                blog_state = #{blogState},
            </if>
            <if test="likeState != null">
                like_state = #{likeState},
            </if>
            <if test="commentState != null">
                comment_state = #{commentState},
            </if>
            <if test="recommendState != null">
                recommend_state = #{recommendState},
            </if>
            <if test="reprintState != null">
                reprint_state = #{reprintState},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateBlogs" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE blog
            <set>
                <if test="userId != null">
                    user_id = #{item.userId},
                </if>
                <if test="property != null">
                    property = #{item.property},
                </if>
                <if test="item.title != null">
                    title = #{item.title},
                </if>
                <if test="item.blogAbstract != null">
                    blog_abstract = #{item.blogAbstract},
                </if>
                <if test="item.content != null">
                    content = #{item.content},
                </if>
                <if test="item.publishTime != null">
                    publish_time = #{item.publishTime},
                </if>
                <if test="item.pageViewCount != null">
                    page_view_count = #{item.pageViewCount},
                </if>
                <if test="item.tag != null">
                    tag = #{item.tag},
                </if>
                <if test="item.sort != null">
                    sort = #{item.sort},
                </if>
                <if test="item.blogComment != null">
                    blog_comment = #{item.blogComment},
                </if>
                <if test="item.blogImg != null">
                    blog_img = #{item.blogImg},
                </if>
                <if test="item.blogState != null">
                    blog_state = #{item.blogState},
                </if>
                <if test="item.likeState != null">
                    like_state = #{item.likeState},
                </if>
                <if test="item.commentState != null">
                    comment_state = #{item.commentState},
                </if>
                <if test="item.recommendState != null">
                    recommend_state = #{item.recommendState},
                </if>
                <if test="item.reprintState != null">
                    reprint_state = #{item.reprintState},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime}
                </if>
                <if test="item.updateTime != null">
                    update_time = #{updateTime}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteBlogById" parameterType="int">
        DELETE FROM blog WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteBlogByIds" parameterType="list">
        DELETE FROM blog WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


<!--    为修改浏览数量写的SQL-->
    <update id="updateViewCount" parameterType="blog">
        update blog set page_view_count = #{pageViewCount} where id = #{id}
    </update>
</mapper>
